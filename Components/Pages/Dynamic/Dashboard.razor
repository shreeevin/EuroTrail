@page "/dashboard"
@layout EuroTrail.Components.Layout.MainLayout
@inject NavigationManager NavigationManager

@code {
	private bool isLoggedIn;
	private EuroTrail.Models.User? currentUser;

	private string ActiveTab = "debt";
	private string ActiveSortTarget = "amount";
	private string TargetStatus = "pending";

	private int CurrentPage = 1;
	private int PageSize = 5;
	private int TotalPage = 0;

	private bool IsFilterEnabled = false;

	private string AmountSort = "none";
	private string DateSort = "latest";

	private List<EuroTrail.Models.Transaction> AllTransactions = new List<EuroTrail.Models.Transaction>();

	protected override Task OnInitializedAsync()
	{
		isLoggedIn = EuroTrail.Services.Session.GetInstance().IsLoggedIn();

		if (!isLoggedIn)
		{
			NavigationManager.NavigateTo("/login");
			return Task.CompletedTask; 
		}
		else
		{
			this.isUserConfigured();
		}

		currentUser = EuroTrail.Services.AuthService.GetCurrentUser();

		this.GetAllTransactionsData(
			target: ActiveTab,
			isSearch: IsFilterEnabled
		);

		return Task.CompletedTask; 
    }

    private void isUserConfigured()
    {
        bool isConfigured = EuroTrail.Services.AuthService.IsConfigured();

        if (!isConfigured)
        {
            NavigationManager.NavigateTo("/profile");
        }
    }

    private void ToggleDateSort()
	{
		ActiveSortTarget = "date";
		CurrentPage = 1;
		TotalPage = 0;

		DateSort = (DateSort == "oldest") ? "latest" : "oldest";
		
		this.GetAllTransactionsData(
			target: ActiveTab,
			isSearch: IsFilterEnabled
		);
	}

	private void ToggleAmountSort()
	{
		ActiveSortTarget = "amount";
		CurrentPage = 1;
		TotalPage = 0;

		AmountSort = AmountSort switch
		{
			"none" => "l2h",    
			"l2h" => "h2l",     
			"h2l" => "none",    
			_ => "none"         
		};

		this.GetAllTransactionsData(
			target: ActiveTab,
			isSearch: IsFilterEnabled
		);
	}

    private void GetAllTransactionsData(
		string target = "debt", 
		bool isSearch = false
	)
	{
		int? userId = currentUser?.Id;
		if (userId == null)
		{
			return;
		}

		if (!isSearch)
		{
			var (transactionsData, pageData) = EuroTrail.Services.TransactionService.GetPendingDebtTransactions(
				userId: (int)userId,
				amountSort: AmountSort,
				dateSort: DateSort,
				targetSort: ActiveSortTarget,
				scope: target,
				page: (int)CurrentPage,
				pageSize: (int)PageSize,
				targetStatus: TargetStatus
			);

			AllTransactions = transactionsData;
			TotalPage = pageData;			
		}
	}

	private void PreviousPagination()
	{
		if(CurrentPage == 1)
		{
			return;
		}

		CurrentPage -= 1;

		this.GetAllTransactionsData(
			target: ActiveTab,
			isSearch: IsFilterEnabled
		);
	}

	private void NextPagination()
	{
		if (TotalPage == 0)
		{
			return;
		}

		if(CurrentPage == TotalPage)
		{
			return;
		}

		CurrentPage += 1;

		this.GetAllTransactionsData(
			target: ActiveTab,
			isSearch: IsFilterEnabled
		);
	}
}

<div class="pb-8 mb-8">
    <div class="text-slate-50 mt-10">
        <h1>Welcome back, @currentUser?.Name</h1>
    </div>
    <div class="flex flex-col mt-8">
        <h1 class="text-slate-50 text-bold">@currentUser?.Name</h1>
        <span class="text-sm text-slate-300 mt-3">@currentUser?.Email</span>
        <span class="text-sm text-slate-300">@currentUser?.Phone</span>
    </div>

    <div class="flex flex-col mt-8">
        <h1 class="text-slate-50 text-bold">@currentUser?.Currency @currentUser?.Wallet</h1>
        <span class="text-sm text-slate-300 mt-3">Joined on @currentUser?.CreatedAt.ToString("MMM dd, yyyy")</span>
    </div>

    <div class="flex flex-row mt-12 w-full">
        <a href="/settlement-create/income" class="rounded-md bg-green-800 py-2 px-4 border border-transparent text-center text-sm text-white transition-all shadow-md hover:shadow-lg focus:bg-green-700 focus:shadow-none active:bg-green-700 hover:bg-green-700 active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none w-full" type="button">
            Add Saving
        </a>
        <a href="/settlement-create/expense" class="rounded-md bg-orange-800 py-2 px-4 border border-transparent text-center text-sm text-white transition-all shadow-md hover:shadow-lg focus:bg-orange-700 focus:shadow-none active:bg-orange-700 hover:bg-orange-700 active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none ml-2 w-full" type="button">
            Add Expense
        </a>
        <a href="/settlement-create/debt" class="rounded-md bg-red-800 py-2 px-4 border border-transparent text-center text-sm text-white transition-all shadow-md hover:shadow-lg focus:bg-red-700 focus:shadow-none active:bg-red-700 hover:bg-red-700 active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none ml-2 w-full" type="button">
            Add Debt
        </a>
    </div>

	@if (AllTransactions != null && AllTransactions.Any())
	{
		<div class="relative flex flex-col w-full h-full text-slate-200 bg-gray-800 shadow-md rounded-xl bg-clip-border my-8 mb-8">
			<div class="relative mx-4 mt-4 overflow-hidden text-slate-200 bg-gray-800 rounded-none bg-clip-border">
				<div class="flex items-center justify-between gap-8 mb-4">
					<div>
						<h5 class="block font-sans text-xl antialiased font-semibold leading-snug tracking-normal text-slate-50"> Pending Debt </h5>
						<p class="block mt-1 font-sans text-base antialiased font-normal leading-relaxed text-slate-100"> See information about all debt transactions </p>
					</div>
					<div class="flex flex-col gap-2 shrink-0 sm:flex-row">
						<a href="/analysis" class="select-none rounded-lg border border-slate-100 py-2 px-4 text-center align-middle font-sans text-xs font-bold uppercase text-slate-50 transition-all hover:opacity-75 focus:ring focus:ring-slate-300 active:opacity-[0.85] disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none" type="button"> view analysis </a>
					</div>
				</div>			
			</div>		
			<div class="p-6 px-0 overflow-hidden">
				<table class="w-full mt-4 text-left table-auto min-w-max">
					<thead>
						<tr>
							<th class="p-4 transition-colors cursor-pointer border-y border-gray-950 bg-blue-gray-50/50 hover:bg-blue-gray-50">
								<p class="flex items-center justify-between gap-2 font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70">
									Info
								</p>
							</th>
							<th class="p-4 transition-colors cursor-pointer border-y border-gray-950 bg-blue-gray-50/50 hover:bg-blue-gray-50">
								<p class="flex items-center justify-between gap-2 font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70">
									Source
								</p>
							</th>
							<th @onclick="ToggleAmountSort" class="p-4 transition-colors cursor-pointer border-y border-gray-950 bg-blue-gray-50/50 hover:bg-blue-gray-50">
								<p class="flex items-center justify-between gap-2 font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70">
									Amount
									<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="w-4 h-4">
										<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"></path>
									</svg>
								</p>
							</th>
							<th class="p-4 transition-colors cursor-pointer border-y border-gray-950 bg-blue-gray-50/50 hover:bg-blue-gray-50">
								<p class="flex items-center justify-between gap-2 font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70">
									Status
								</p>
							</th>
							<th @onclick="ToggleDateSort" class="p-4 transition-colors cursor-pointer border-y border-gray-950 bg-blue-gray-50/50 hover:bg-blue-gray-50">
								<p class="flex items-center justify-between gap-2 font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70">
									Date
									<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="w-4 h-4">
										<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"></path>
									</svg>
								</p>
							</th>
							<th class="p-4 transition-colors cursor-pointer border-y border-gray-950 bg-blue-gray-50/50 hover:bg-blue-gray-50">
								<p class="flex items-center justify-between gap-2 font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70"></p>
							</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var transaction in AllTransactions)
						{
							<tr class="border-b border-gray-950 last:border-b-0">
								<td class="p-4">
									<div class="flex items-center gap-3">
										@if(@transaction?.Scope == "income")
										{
											<svg class="relative inline-block h-9 w-9 !rounded-full object-cover object-center" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
												<rect width="24" height="24" rx="12" fill="#CBFF82" />
												<g clip-path="url(#clip0_72_2)">
													<path d="M17 16.4053C13.7139 17.1987 10.2861 17.1987 7 16.4053" stroke="#618635" stroke-linecap="round" stroke-linejoin="round" />
													<path d="M11.9751 7L11.9751 14" stroke="#618635" stroke-linecap="round" stroke-linejoin="round" />
													<path d="M14.4502 11.9004L12.6902 13.7054C12.6002 13.798 12.4925 13.8717 12.3735 13.9221C12.2546 13.9724 12.1268 13.9983 11.9977 13.9983C11.8685 13.9983 11.7407 13.9724 11.6217 13.9221C11.5028 13.8717 11.3951 13.798 11.3052 13.7054L9.55017 11.9004" stroke="#618635" stroke-linecap="round" stroke-linejoin="round" />
												</g>
												<defs>
													<clipPath id="clip0_72_2">
														<rect width="12" height="12" fill="white" transform="matrix(0 1 -1 0 18 6)" />
													</clipPath>
												</defs>
											</svg>
										} 
										else if(@transaction?.Scope == "expense")
										{
											<svg class="relative inline-block h-9 w-9 !rounded-full object-cover object-center" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
												<rect width="24" height="24" rx="12" fill="#FFC182" />
												<g clip-path="url(#clip0_72_3)">
													<path d="M17 16.4053C13.7139 17.1987 10.2861 17.1987 7 16.4053" stroke="#866035" stroke-linecap="round" stroke-linejoin="round" />
													<path d="M12.0249 14L12.0249 7" stroke="#866035" stroke-linecap="round" stroke-linejoin="round" />
													<path d="M9.55017 9.10041L11.3052 7.29541C11.3944 7.20146 11.5018 7.12666 11.6209 7.07553C11.7399 7.02441 11.8681 6.99805 11.9977 6.99805C12.1272 6.99805 12.2555 7.02441 12.3745 7.07553C12.4936 7.12666 12.601 7.20146 12.6902 7.29541L14.4502 9.10041" stroke="#866035" stroke-linecap="round" stroke-linejoin="round" />
												</g>
												<defs>
													<clipPath id="clip0_72_3">
														<rect width="12" height="12" fill="white" transform="matrix(0 1 -1 0 18 6)" />
													</clipPath>
												</defs>
											</svg>
										}
										else
										{	
											<svg class="relative inline-block h-9 w-9 !rounded-full object-cover object-center" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
												<rect width="24" height="24" rx="12" fill="#FF8282" />
												<path d="M17 15.9102C13.713 16.6961 10.287 16.6961 7 15.9102" stroke="#863536" stroke-linecap="round" stroke-linejoin="round" />
												<path d="M9.52539 12.7303L14.4754 7.78027" stroke="#863536" stroke-linecap="round" stroke-linejoin="round" />
												<path d="M11.2402 7.52006L13.7402 7.48503C13.8728 7.48013 14.0051 7.50267 14.1286 7.55119C14.2522 7.59971 14.3644 7.67316 14.4582 7.76701C14.5521 7.86087 14.6256 7.97306 14.6741 8.0966C14.7226 8.22015 14.7451 8.35239 14.7402 8.48503L14.7052 10.985" stroke="#863536" stroke-linecap="round" stroke-linejoin="round" />
											</svg>
										}

										<div class="flex flex-col">
											<p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900"> @("EURO" + transaction?.Id.ToString().PadLeft(4, '0')) </p>
											@if (@transaction?.Type == "debit")
											{
												<span class="mt-0.5 bg-transparent text-green-500 border border-neutral-300 flex items-center text-xs font-semibold px-2.5 py-0.5 rounded-full">
													<span class="block w-1.5 h-1.5 -ml-0.5 mr-1 bg-green-500 rounded-full"></span>
													<span class="text-xs">Debit</span>
												</span>
											}
											else
											{
												<span class="mt-0.5 bg-transparent text-red-500 border border-neutral-300 flex items-center text-xs font-semibold px-2.5 py-0.5 rounded-full">
													<span class="block w-1.5 h-1.5 -ml-0.5 mr-1 bg-red-500 rounded-full"></span>
													<span class="text-xs">Credit</span>
												</span>
											}
										</div>
									</div>
								</td>
								<td class="p-4">
									<div class="flex flex-col">
										<p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900"> @(EuroTrail.Helpers.SourceHelper.GetSourceNameByCode(transaction?.Source ?? string.Empty, transaction?.Scope ?? string.Empty)) </p>
									</div>
								</td>
								<td class="p-4">
									<div class="flex flex-col">
										<p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900">@currentUser?.Currency @transaction?.Amount </p>
									</div>
								</td>
								<td class="p-4">
									<div class="w-max">
										@if (transaction?.Status == "completed")
										{
											<div class="relative grid items-center px-2 py-1 font-sans text-xs font-bold text-green-900 uppercase rounded-md select-none whitespace-nowrap bg-green-500">
												<span class="">@transaction?.Status</span>
											</div>
										}
										else
										{
											<div class="relative grid items-center px-2 py-1 font-sans text-xs font-bold text-orange-900 uppercase rounded-md select-none whitespace-nowrap bg-orange-500">
												<span class="">@transaction?.Status</span>
											</div>
										}
									</div>
								</td>
								<td class="p-4">
									<p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900"> @transaction?.CreatedAt.ToString("MMM dd, yyyy") </p>
								</td>
								<td class="p-4">
									<a href="/transaction-detail/@transaction?.Id" class="text-slate-50 relative h-10 max-h-[40px] w-10 max-w-[40px] select-none rounded-lg text-center align-middle font-sans text-xs font-medium uppercase transition-all hover:bg-gray-600/10 active:bg-gray-600/20 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none" type="button">
										<span class="absolute transform -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2">
											<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
												<path stroke-linecap="round" stroke-linejoin="round" d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25" />
											</svg>
										</span>
									</a>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		
			<div class="flex items-center justify-between p-4 border-t border-gray-950">
				<p class="block font-sans text-sm antialiased font-normal leading-normal text-blue-gray-900"> Page @CurrentPage of @((TotalPage == 0) ? 1 : TotalPage) </p>
				<div class="flex gap-2">
					<button @onclick="PreviousPagination" class="select-none rounded-lg border border-slate-100 py-2 px-4 text-center align-middle font-sans text-xs font-bold uppercase text-slate-50 transition-all hover:opacity-75 focus:ring focus:ring-gray-300 active:opacity-[0.85] disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none" type="button"> Previous </button>
					<button @onclick="NextPagination" class="select-none rounded-lg border border-slate-100 py-2 px-4 text-center align-middle font-sans text-xs font-bold uppercase text-slate-50 transition-all hover:opacity-75 focus:ring focus:ring-gray-300 active:opacity-[0.85] disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none" type="button"> Next </button>
				</div>
			</div>
		</div>
	}
</div>